name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Python (for setup script)
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: npm ci

      - name: Setup binary dependencies
        shell: bash
        run: |
          chmod +x setup-binaries.sh
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            ./setup-binaries.sh windows
            cd python-runtime-windows
            ./python.exe get-pip.py
            ./Scripts/pip.exe install -r ../requirements.txt
          else
            ./setup-binaries.sh macos
          fi

      - name: Build Windows application
        if: matrix.os == 'windows-latest'
        run: npm run build:win

      - name: Build macOS application
        if: matrix.os == 'macos-latest'
        run: npm run build:mac

      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: |
            dist/*.exe
            dist/*.blockmap
            dist/win-unpacked/
          retention-days: 30

      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-artifacts
          path: |
            dist/*.dmg
            dist/*.blockmap
            dist/mac/
          retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-artifacts
          path: dist/windows

      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-artifacts
          path: dist/macos

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/windows/*.exe
            dist/windows/*.blockmap
            dist/macos/*.dmg
            dist/macos/*.blockmap
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
